---
# Source: nats/templates/nats.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: nats-config-0
data:
  nats.conf: |-
    listen: 0.0.0.0:4222
    http: 0.0.0.0:8222
    server_name: nats-0
    cluster {
        name: nats-dev
        listen: 0.0.0.0:6222
        routes = [
            nats://nats-1:6222
            nats://nats-2:6222
        ]
        connect_retries: 10
    }
    jetstream {
        store_dir: /nats/storage
        max_memory_store: 6GB
        max_file_store: 10GB
    }
    debug:   true
    trace:   true
    logtime: true
    max_connections: 1024
    max_control_line: 1024
    max_payload: 2000000
    write_deadline: "2s"
---
# Source: nats/templates/nats.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: nats-config-1
data:
  nats.conf: |-
    listen: 0.0.0.0:4222
    http: 0.0.0.0:8222
    server_name: nats-1
    cluster {
        name: nats-dev
        listen: 0.0.0.0:6222
        routes = [
            nats://nats-0:6222
            nats://nats-2:6222
        ]
        connect_retries: 10
    }
    jetstream {
        store_dir: /nats/storage
        max_memory_store: 6GB
        max_file_store: 10GB
    }
    debug:   true
    trace:   true
    logtime: true
    max_connections: 1024
    max_control_line: 1024
    max_payload: 2000000
    write_deadline: "2s"
---
# Source: nats/templates/nats.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: nats-config-2
data:
  nats.conf: |-
    listen: 0.0.0.0:4222
    http: 0.0.0.0:8222
    server_name: nats-2
    cluster {
        name: nats-dev
        listen: 0.0.0.0:6222
        routes = [
            nats://nats-0:6222
            nats://nats-1:6222
        ]
        connect_retries: 10
    }
    jetstream {
        store_dir: /nats/storage
        max_memory_store: 6GB
        max_file_store: 10GB
    }
    debug:   true
    trace:   true
    logtime: true
    max_connections: 1024
    max_control_line: 1024
    max_payload: 2000000
    write_deadline: "2s"
---
# Source: nats/templates/nats.yaml
apiVersion: v1
kind: Service
metadata:
  name: nats-0
  labels:
    component: nats
spec:
  selector:
    app: nats-0
  clusterIP: None
  ports:
  - name: client
    port: 4222
  - name: cluster
    port: 6222
  - name: monitor
    port: 8222
  - name: metrics
    port: 8081
---
# Source: nats/templates/nats.yaml
apiVersion: v1
kind: Service
metadata:
  name: nats-1
  labels:
    component: nats
spec:
  selector:
    app: nats-1
  clusterIP: None
  ports:
  - name: client
    port: 4222
  - name: cluster
    port: 6222
  - name: monitor
    port: 8222
  - name: metrics
    port: 8081
---
# Source: nats/templates/nats.yaml
apiVersion: v1
kind: Service
metadata:
  name: nats-2
  labels:
    component: nats
spec:
  selector:
    app: nats-2
  clusterIP: None
  ports:
  - name: client
    port: 4222
  - name: cluster
    port: 6222
  - name: monitor
    port: 8222
  - name: metrics
    port: 8081
---
# Source: nats/templates/nats.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats-0
  labels:
    component: nats
    app: nats-0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nats-0
  template:
    metadata:
      labels:
        component: nats
        app: nats-0
    spec:
      # affinity:
      #   podAntiAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #     - labelSelector:
      #         matchExpressions:
      #           - key: component
      #             operator: In
      #             values:
      #               - nats
      #       topologyKey: kubernetes.io/hostname
      #       namespaces: ["nats-poc"]
      #
      # nodeSelector:
      #   {}
      #
      containers:
      - name: metrics
        image: synadia/prometheus-nats-exporter:0.6.2
        imagePullPolicy: IfNotPresent
        args: ["-varz", "-subz", "-connz", "-port=8081", "-routez", "http://localhost:8222"]
        ports:
        - containerPort: 8081
          name: metrics
        resources:
          requests:
            cpu: 50m
            memory: 16Mi
          limits:
            cpu: 256m
            memory: 64Mi
      - name: nats
        image: nats:latest
        imagePullPolicy: IfNotPresent
        args: [ "--config", "/etc/nats/config/nats.conf"]
        ports:
        - containerPort: 4222
          name: client
        - containerPort: 6222
          name: cluster
        - containerPort: 8222
          name: monitor
        livenessProbe:
          httpGet:
            path: /
            port: 8222
          initialDelaySeconds: 10
          timeoutSeconds: 5
        resources:
          requests:
            cpu: 100m
            memory: 24Mi
          limits:
            cpu: 256m
            memory: 64Mi
        volumeMounts:
        - name: config-volume
          mountPath: /etc/nats/config
        - name: jetstream-host-storage-path
          mountPath: /nats/storage
      volumes:
      - name: config-volume
        configMap:
          name: nats-config-0
      - name: jetstream-host-storage-path
        hostPath:
          path: /data/nats/nats-0
          type: DirectoryOrCreate
---
# Source: nats/templates/nats.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats-1
  labels:
    component: nats
    app: nats-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nats-1
  template:
    metadata:
      labels:
        component: nats
        app: nats-1
    spec:
      # affinity:
      #   podAntiAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #     - labelSelector:
      #         matchExpressions:
      #           - key: component
      #             operator: In
      #             values:
      #               - nats
      #       topologyKey: kubernetes.io/hostname
      #       namespaces: ["nats-poc"]
      #
      # nodeSelector:
      #   {}
      #
      containers:
      - name: metrics
        image: synadia/prometheus-nats-exporter:0.6.2
        imagePullPolicy: IfNotPresent
        args: ["-varz", "-subz", "-connz", "-port=8081", "-routez", "http://localhost:8222"]
        ports:
        - containerPort: 8081
          name: metrics
        resources:
          requests:
            cpu: 50m
            memory: 16Mi
          limits:
            cpu: 256m
            memory: 64Mi
      - name: nats
        image: nats:latest
        imagePullPolicy: IfNotPresent
        args: [ "--config", "/etc/nats/config/nats.conf"]
        ports:
        - containerPort: 4222
          name: client
        - containerPort: 6222
          name: cluster
        - containerPort: 8222
          name: monitor
        livenessProbe:
          httpGet:
            path: /
            port: 8222
          initialDelaySeconds: 10
          timeoutSeconds: 5
        resources:
          requests:
            cpu: 100m
            memory: 24Mi
          limits:
            cpu: 256m
            memory: 64Mi
        volumeMounts:
        - name: config-volume
          mountPath: /etc/nats/config
        - name: jetstream-host-storage-path
          mountPath: /nats/storage
      volumes:
      - name: config-volume
        configMap:
          name: nats-config-1
      - name: jetstream-host-storage-path
        hostPath:
          path: /data/nats/nats-1
          type: DirectoryOrCreate
---
# Source: nats/templates/nats.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats-2
  labels:
    component: nats
    app: nats-2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nats-2
  template:
    metadata:
      labels:
        component: nats
        app: nats-2
    spec:
      # affinity:
      #   podAntiAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #     - labelSelector:
      #         matchExpressions:
      #           - key: component
      #             operator: In
      #             values:
      #               - nats
      #       topologyKey: kubernetes.io/hostname
      #       namespaces: ["nats-poc"]
      #
      # nodeSelector:
      #   {}
      #
      containers:
      - name: metrics
        image: synadia/prometheus-nats-exporter:0.6.2
        imagePullPolicy: IfNotPresent
        args: ["-varz", "-subz", "-connz", "-port=8081", "-routez", "http://localhost:8222"]
        ports:
        - containerPort: 8081
          name: metrics
        resources:
          requests:
            cpu: 50m
            memory: 16Mi
          limits:
            cpu: 256m
            memory: 64Mi
      - name: nats
        image: nats:latest
        imagePullPolicy: IfNotPresent
        args: [ "--config", "/etc/nats/config/nats.conf"]
        ports:
        - containerPort: 4222
          name: client
        - containerPort: 6222
          name: cluster
        - containerPort: 8222
          name: monitor
        livenessProbe:
          httpGet:
            path: /
            port: 8222
          initialDelaySeconds: 10
          timeoutSeconds: 5
        resources:
          requests:
            cpu: 100m
            memory: 24Mi
          limits:
            cpu: 256m
            memory: 64Mi
        volumeMounts:
        - name: config-volume
          mountPath: /etc/nats/config
        - name: jetstream-host-storage-path
          mountPath: /nats/storage
      volumes:
      - name: config-volume
        configMap:
          name: nats-config-2
      - name: jetstream-host-storage-path
        hostPath:
          path: /data/nats/nats-2
          type: DirectoryOrCreate
