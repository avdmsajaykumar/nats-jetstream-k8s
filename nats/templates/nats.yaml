{{ $values := .Values }}
{{ $release := .Release}}
{{ $count := (add .Values.replicaCount | int) }}
{{- range $i := until $count }}
---
apiVersion: v1
kind: Service
metadata:
  name: nats-{{ $i }}
  labels:
    component: nats
spec:
  selector:
    app: nats-{{ $i }}
  clusterIP: None
  ports:
  - name: client
    port: 4222
  - name: cluster
    port: 6222
  - name: monitor
    port: 8222
  - name: metrics
    port: 8081
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nats-config-{{ $i }}
data:
  nats.conf: |-
    listen: 0.0.0.0:4222
    http: 0.0.0.0:8222
    server_name: nats-{{ $i }}
    cluster {
        name: nats-dev
        listen: 0.0.0.0:6222
        routes = [
            {{- range $j := until $count }}
            {{- if ne $i $j }}
            nats://nats-{{ $j }}:6222
            {{- end }}
            {{- end }}
        ]
        connect_retries: 10
    }
    jetstream {
        store_dir: /nats/storage
        max_memory_store: 6GB
        max_file_store: 10GB
    }
    debug:   true
    trace:   true
    logtime: true
    max_connections: 1024
    max_control_line: 1024
    max_payload: 2000000
    write_deadline: "2s"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats-{{ $i }}
  labels:
    component: nats
    app: nats-{{ $i }}
spec:
  {{- if $values.isDrEnv }}
  replicas: 0
  {{- else }}
  replicas: 1
  {{- end }}
  selector:
    matchLabels:
      app: nats-{{ $i }}
  template:
    metadata:
      labels:
        component: nats
        app: nats-{{ $i }}
    spec:
      # affinity:
      #   podAntiAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #     - labelSelector:
      #         matchExpressions:
      #           - key: component
      #             operator: In
      #             values:
      #               - nats
      #       topologyKey: kubernetes.io/hostname
      #       namespaces: ["{{ $release.Namespace }}"]
      # {{- if ne (( index $values.nodeSelector "kaas-node-type" ) | toString) "ci" }}
      # nodeSelector:
      #   {{ toYaml $values.nodeSelector }}
      # {{- end }}
      containers:
      - name: metrics
        image: synadia/prometheus-nats-exporter:0.6.2
        imagePullPolicy: IfNotPresent
        args: ["-varz", "-subz", "-connz", "-port=8081", "-routez", "http://localhost:8222"]
        ports:
        - containerPort: 8081
          name: metrics
        resources:
          {{- if eq $values.resourceProfile "dev" }}
          requests:
            cpu: 50m
            memory: 16Mi
          {{- else }}
          requests:
            cpu: 50m
            memory: 32Mi
          {{- end }}
          limits:
            cpu: 256m
            memory: 64Mi
      - name: nats
        image: nats:latest
        imagePullPolicy: IfNotPresent
        args: [ "--config", "/etc/nats/config/nats.conf"]
        ports:
        - containerPort: 4222
          name: client
        - containerPort: 6222
          name: cluster
        - containerPort: 8222
          name: monitor
        livenessProbe:
          httpGet:
            path: /
            port: 8222
          initialDelaySeconds: 10
          timeoutSeconds: 5
        resources:
          {{- if eq $values.resourceProfile "dev" }}
          requests:
            cpu: 100m
            memory: 24Mi
          {{- else }}
          requests:
            cpu: 50m
            memory: 32Mi
          {{- end }}
          limits:
            cpu: 256m
            memory: 64Mi
        volumeMounts:
        - name: config-volume
          mountPath: /etc/nats/config
        - name: jetstream-host-storage-path
          mountPath: /nats/storage
      volumes:
      - name: config-volume
        configMap:
          name: nats-config-{{ $i }}
      - name: jetstream-host-storage-path
        hostPath:
          path: /data/nats/nats-{{ $i }}
          type: DirectoryOrCreate

{{ end }}